============================================================= Binding data WPF (Basic) ===========================================
- Binding lên view có 1 cách còn binding ở model thì nhiều cách
- Oneway: Dữ liệu 1 chiều từ nguồn qua còn không biết chiều ngược lại
- Twoway(default): Dữ liệu 2 chiều từ nguồn qua và nguồn lại. Nhưng để tránh trường hợp lỗi thì khi đổi data thì phải chờ chuyển chuột ra 
- OneWayToSource: Cập nhật lại cho source nhưng source thay đổi không ảnh hưởng cho thằng này
- OneTime: Cập nhật 1 lần duy nhất từ source (Lấy giá trị ban đầu và sau đó thì không cập nhật nữa)
============================================================= Grid ===========================================
- Sử dụng như hệ thống lưới
============================================================= StackPanel ===========================================
- Tự động dãn kích thước height theo content còn width thì full
- Orientaion = Horizontal (Ngang) hoặc Vertical (Dọc)
============================================================= WrapPanel ===========================================
- Giống như stackPanel nhưng có update nếu control bị tràn ra ngoài thì nó sẽ tự xuống dòng

============================================================= DockPanel ===========================================
- Giống stackPanel nhưng phần tử cuối sẽ phình to ra hết chỗ trống thừa
- Nếu không sẽ tự bắt vào left
- Control không nằm đè lên nhau
- LastChildFill = false tắt việc phần tử cuối sẽ fill đầy chỗ trống hiện có
- DockPanel.Dock = Top sẽ làm đổi vị trí tương tự Grid chia cột
- Việc vị trí sẽ phụ thuộc vào thàng nào được set trước set sau

============================================================= Canvas ===========================================
- Dùng cho vẽ đồ họa 3D vẫn 
- Có thể sử dụng margin nhưng điểm mạnh là top và left right botto (vị trí của element so với biên độ rộng)
- Dùng zIndex để set việc thằng nào sẽ hiển thị ghi đè lên thàng còn lại
- Dùng để vẽ elip, rectangle mặc dù Grid vẫn có thể vẽ nhưng ưu tiên Canvas do có thể vẽ 3D và thay đổi vị trí
============================================================= Border ===========================================
- Không thể border cho đúng từng element mà phải border cho thằng bao bọc lấy cái element đó
- Border chỉ có thể có 1 con vì vậy nó phải nằm ngoài 1 thằng bao quanh
- BorderBrush="Black" (Màu border) BorderThickness="5" (độ dày border)

============================================================= ScrollViewer ===========================================
============================================================= Toggle Button ===========================================
============================================================= Slider ===========================================
============================================================= Image ===========================================
============================================================= Style ===========================================
============================================================= DataTemplate ===========================================
- Dùng để tạo ra 1 template để tái sử dụng
============================================================= ListBox ===========================================
============================================================= ListView ===========================================
============================================================= TreeView ===========================================
- Display 
- Binding
- Lazyloading
============================================================= Trigger ===========================================
- Nhu trigger trong sql
- Single Trigger
- Multiple trigger
============================================================= Command ===========================================
- User Defined 
- System defined

============================================================= Update Source Trigger ===========================================
- Thong bao rang co su thay doi de update khi binding
============================================================= Value Converter ===========================================


============================================================= Web ===========================================


C#: DI (Dependency Injection), Delegate, Lambda, Attribut, Linq, Asynchrônus, HTTP, ADO.NET/Entity Framework
- HTML
- CSS(Boostrap)
- JavaScript(Jquery)
- SQL - Query - MS SQL Server, MySQL

- ASP.NET 
- ASP.NET Razor page 
- ASP.NET MVC


- Xác thực HTTPS và SSL
dotnet dev-certs https --clean
dotnet dev-certs https --trust


-- Chạy ứng dụng
Tạo ra 1 đối tượng Host(IHost) object:
	- Dependency Injection (ID): IServiceProvider (ServiceCollection)
	- Logging (ILogging) 
	- Configuration
	- IHostedService => StartAsync: Run HTTP Server (Kestrel HTTP)
1. Tạo tạo ra IHostBuilder: IHostBuilder builder = Host.CreateDefaultBuilder(args);
2. Cấu hình, đăng ký các dịch vụ (goi configureWebHostDefaults) builder.ConfigureWebHostDefaults((IWebHostBuilder webBuilder)=> {
	// Tùy biến về host
	// webBuilder
	webBuilder.UseStartUp<NameClassStartup>();
	})
3. IHôstBuilder.Build() => Host(IHost)
4. Host.Run()


Request => pipeline (Middlewware)


Để tạo ra 1 Startup của mình thì cần:
// Đăng ký các dịch vụ của ứng dụng (DI)
- có phương thúc COnfigureService(IServiceCollections services) // services.AddSingleton
- có phương thức Configure(IApplicationBuilder app, IWebHostEnvironment evn) // Xây dựng pipeline (Chuỗi middleware)

-- Pipeline là chuỗi các middleware, là chuỗi những đoạn code nhỏ mà HTTP message phải đi qua và đi qua đó nó trả về response
--- app.Run(async (context) => {await context.Response.WriteAsync("message")}); // Terminate middleware
--- app.Map("/abc", app1 => {app1.Run(async (context) => {context.Response.WriteAsync("message")})}); // Terminate middleware
--- Terminate middleware: Không gọi middleware khác. Nếu như middleware có địa chỉ là abc đặt trước thì nếu request từ địa chỉ này sẽ trả về response của địa chỉ này nếu không phải từ abc thì sẽ gọi đến run còn nếu run nằm trước thì sẽ không gọi đến abc


-- app.UseStaticFiles(); Cho phép truy cập file tĩnh ở wwwroot nếu có file thì sẽ heiẻn thị nội dung và phải viết ở đầu nếu không có file sẽ được sử lý bởi thằng khác
-- app.UseStatusCodePages(); // hiển thị code khi không tìm thấy địa chỉ đặt ở đầu hay cuối kh quan trọng